#include "palette.h"

rgb color(complex c)
{
	complex z;

	int it, maxIt = 256;
	double dis;
	for(it = 0;it < maxIt;it ++)
	{
		z = z * z + c;
		dis = z.a*z.a+z.b*z.b;
		if(dis > 256) break;
	}

	if(it < maxIt)
	{
		double zn = sqrt(z.a*z.a+z.b*z.b);
		double nu = log( log(zn) / log(2) ) / log(2);

		double k = it + 1 - nu;
		k /= 4;
		double f = k - floor(k);

		rgb color1 = palette[((int) k) % palette_size];
		rgb color2 = palette[((int) k + 1) % palette_size];

		int r = color2.r * f + color1.r * (1 - f);
		int g = color2.g * f + color1.g * (1 - f);
		int b = color2.b * f + color1.b * (1 - f);
		return rgb(r, g, b);
	}
	else
	{
		return rgb(0, 0, 0);
	}
}

